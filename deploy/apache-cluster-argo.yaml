apiVersion: v1
kind: Namespace
metadata:
  name: argo-apache-deployment
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apache-config
  namespace: argo-apache-deployment
data:
  httpd.conf: |
    ServerTokens Prod
    ServerRoot "/etc/httpd"
    PidFile "/var/run/httpd.pid"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin root@localhost
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: argo-apache-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - name: apache
        image: httpd:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: config-volume
          mountPath: /usr/local/apache2/conf/httpd.conf
          subPath: httpd.conf
      volumes:
      - name: config-volume
        configMap:
          name: apache-config
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: argo-apache-deployment
spec:
  selector:
    app: apache
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: apache-hpa
  namespace: argo-apache-deployment
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: apache-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: apache-scaledobject
  namespace: argo-apache-deployment
spec:
  scaleTargetRef:
    name: apache-deployment
  pollingInterval: 30  # Check every 30 seconds
  cooldownPeriod:  300 # Wait 5 minutes before scaling down
  minReplicaCount: 2
  maxReplicaCount: 10
  triggers:
  - type: cpu
    metadata:
      type: "Utilization"
      value: "50"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apache-ingress
  namespace: argo-apache-deployment
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: apache.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: apache-service
            port:
              number: 80
