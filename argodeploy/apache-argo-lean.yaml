apiVersion: v1
kind: Namespace
metadata:
  name: argo-apache-deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: argo-apache-deployment
spec:
  replicas: 1  # Definir como o mínimo de réplicas
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - name: apache
        image: httpd:latest  # Imagem do Apache
        ports:
        - containerPort: 80   # Porta do Apache
        resources:
          requests:
            cpu: "250m"
          limits:
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: argo-apache-deployment
spec:
  selector:
    app: apache
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: LoadBalancer  # LoadBalancer para exposição pública
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apache-ingress
  namespace: argo-apache-deployment
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: apache.example.com  # Substitua pelo seu domínio ou IP
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: apache-service  # Nome do serviço LoadBalancer
            port:
              number: 80
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: apache-scaledobject
  namespace: argo-apache-deployment
spec:
  scaleTargetRef:
    kind: Deployment
    name: apache-deployment
  minReplicaCount: 1  # Número mínimo de réplicas
  maxReplicaCount: 20  # Número máximo de réplicas
  triggers:
  - type: cpu
    metadata:
      type: "Utilization"
      value: "10"  # Escala 2 pods para cada 10% de utilização de CPU a mais
